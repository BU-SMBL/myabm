
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/ortho/demo_tissue_growth.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_ortho_demo_tissue_growth.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_ortho_demo_tissue_growth.py:


Tissue Growth
=============

Tissue has been shown to grow in a curvature-dependent manner, with faster
growth in regions of higher concave curvatures while being suppressed in 
regions of convex curvature. Curvature dependent tissue growth is implemented
through the :func:`myabm.ortho.actions.produce_oriented` cell action, and 
requires the model action: :func:`myabm.ortho.actions.update_curvature` to 
calculate the local curvatures.

This example replicates the experimental 
setup of :cite:`Bidan2013` to illustrate this behavior.

.. GENERATED FROM PYTHON SOURCE LINES 18-44




.. image-sg:: /examples/ortho/images/sphx_glr_demo_tissue_growth_001.gif
   :alt: demo tissue growth
   :srcset: /examples/ortho/images/sphx_glr_demo_tissue_growth_001.gif
   :class: sphx-glr-single-img




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/myabm/myabm/src/myabm/ortho/__init__.py:90: UserWarning: Mesh has edges of unequal lengths. OrthoModel assumes a uniform grid.
      warnings.warn('Mesh has edges of unequal lengths. OrthoModel assumes a uniform grid.')
    /usr/share/miniconda/envs/sphinx-env/lib/python3.10/site-packages/mymesh/curvature.py:501: NumbaPerformanceWarning: np.dot() is faster on contiguous arrays, called on (Array(float64, 2, 'F', False, aligned=True), Array(float64, 2, 'A', False, aligned=True))
      MaxPrincipalDirection = np.dot(np.linalg.inv(R[:3,:3]), np.append(x[:,np.argmax(v)],0)[:,None])[:,0]






|

.. code-block:: Python

    import sys
    sys.path.append('../src')
    from myabm.ortho import OrthoModel, actions, setup, geometries
    import mymesh
    import numpy as np

    # Setup model
    func, bounds = geometries.cross_channel('medium')
    h = 0.025 # Grid spacing
    model = setup.implicit_scaffold(func, bounds, h, seeding_density=1e3) 

    # Scaffold surfaces are smoothed by default, but in this case the geometry has 
    # flat walls/sharp edges
    model.model_parameters['Smooth Scaffold'] = False 
    # Set actions
    model.agent_actions = (actions.proliferate, actions.migrate_curvotaxis, actions.produce_oriented, actions.apoptose) # Set cell actions
    model.model_actions = (actions.update_curvature,)

    # Run the model
    model.act(actions.update_curvature) # initialize curvature before iterating
    model.iterate(35) # Iterate the model for 35 days

    # Generate animation
    model.animate('cross_channel.gif', fps=10, timestep=1, view='xy', show_mesh_edges=False,
                show_agents=False, show_timer=True)



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (41 minutes 59.577 seconds)


.. _sphx_glr_download_examples_ortho_demo_tissue_growth.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: demo_tissue_growth.ipynb <demo_tissue_growth.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: demo_tissue_growth.py <demo_tissue_growth.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: demo_tissue_growth.zip <demo_tissue_growth.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
